# YT-DLP Web IPv6双栈版 Docker Compose 配置模板
# 使用前请修改所有标记为 "请修改" 的配置项

services:
  yt-dlp-web-ipv6:
    image: ghcr.io/your-username/yt-dlp-web-ipv6:latest  # 请修改为您的镜像地址
    container_name: yt-dlp-web-ipv6
    restart: unless-stopped
    ports:
      - "8090:8090"  # 请根据需要修改外部端口
    
    # IPv6 双栈网络配置
    networks:
      - yt-dlp-ipv6-network
    
    volumes:
      # 配置文件持久化 - 请修改路径
      - /your-path/yt-dlp-web/config/:/app/config
      # 数据库持久化 - 请修改路径
      - /your-path/yt-dlp-web/data/:/app/data
      # 日志持久化 - 请修改路径
      - /your-path/yt-dlp-web/logs/:/app/logs
      
      # 开发调试用（生产环境请删除）
      # - /your-path/yt-dlp-web/code/app/:/app
      
    environment:
      # 基础配置
      - FLASK_ENV=production  # 生产环境，开发环境改为 development
      - SECRET_KEY=please-change-this-secret-key-to-a-random-string  # 请修改为随机字符串
      
      # IPv6 双栈配置
      - ENABLE_IPV6=true  # 启用IPv4+IPv6双栈支持
      
      # 管理员账号配置 - 请修改
      - ADMIN_USERNAME=admin  # 请修改管理员用户名
      - ADMIN_PASSWORD=please-change-this-password  # 请修改管理员密码
      
      # 数据库配置
      - DATABASE_URL=sqlite:///data/app.db
      
      # 下载配置
      - DOWNLOAD_DIR=/app/downloads
      - MAX_CONCURRENT=3  # 可根据服务器性能调整
      
      # Telegram配置 (可选) - 请填入您的配置
      - TELEGRAM_BOT_TOKEN=  # 请填入您的 Bot Token
      - TELEGRAM_CHAT_ID=    # 请填入您的 Chat ID
      - TELEGRAM_API_ID=     # 请填入您的 API ID
      - TELEGRAM_API_HASH=   # 请填入您的 API Hash
      
      # 时区设置 - 请根据需要修改
      - TZ=Asia/Shanghai
      
      # 开发调试配置（生产环境请删除或设为0）
      - FLASK_DEBUG=0
      - PYTHONPATH=/app
      
    labels:
      # Portainer管理标签
      - "io.portainer.accesscontrol.teams=administrators"
      - "io.portainer.accesscontrol.users=admin"
      # 应用信息标签
      - "app.name=yt-dlp-web-ipv6"
      - "app.description=YouTube视频下载器Web界面(IPv6双栈版)"
      - "app.version=2.0.0-ipv6"
      - "app.category=media"
      - "app.url=http://localhost:8090"  # 请根据实际端口修改
      - "app.ipv6.url=http://[::1]:8090"  # IPv6访问地址
      # 健康检查标签
      - "health.check.url=http://localhost:8090/api/health"  # 请根据实际端口修改
      - "health.check.interval=30s"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  yt-dlp-ipv6-network:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
        - subnet: 2001:db8::/32
    labels:
      - "app.network=yt-dlp-ipv6"
      - "network.type=dual-stack"

# 使用说明：
# 1. 修改所有标记为 "请修改" 的配置项
# 2. 确保Docker主机支持IPv6
# 3. 启动命令：docker-compose -f docker-compose-ipv6-template.yml up -d
# 4. IPv4访问：http://localhost:8090
# 5. IPv6访问：http://[::1]:8090 (本地) 或 http://[您的IPv6地址]:8090
# 6. 检查IPv6状态：docker exec yt-dlp-web-ipv6 ip -6 addr show
