version: '3.8'

services:
  yt-dlp-web:
    image: ghcr.io/zhumao520/yt-dlp-web:latest
    container_name: yt-dlp-web-prod
    restart: unless-stopped
    ports:
      - "8090:8080"
    volumes:
      # 生产环境数据持久化
      - yt-dlp-downloads:/app/downloads
      - yt-dlp-data:/app/data
      - yt-dlp-logs:/app/logs
      - yt-dlp-temp:/app/temp
      - yt-dlp-cookies:/app/data/cookies
      
    environment:
      # 生产环境配置
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      
      # 应用配置
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
      - APP_DEBUG=false
      
      # 管理员配置
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      
      # 数据库配置
      - DATABASE_URL=sqlite:///data/app.db
      
      # 下载配置
      - DOWNLOAD_DIR=/app/downloads
      - MAX_CONCURRENT=${MAX_CONCURRENT:-3}
      
      # Telegram配置
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-}
      - TELEGRAM_API_ID=${TELEGRAM_API_ID:-}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH:-}
      
      # 系统配置
      - TZ=${TZ:-Asia/Shanghai}
      - DOCKER_CONTAINER=1
      
    networks:
      - yt-dlp-network
      
    labels:
      # 生产环境标签
      - "app.name=yt-dlp-web"
      - "app.environment=production"
      - "app.version=2.0.0"
      - "app.category=media"
      
      # 监控标签
      - "monitoring.enable=true"
      - "backup.enable=true"
      - "backup.schedule=daily"
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # 生产环境资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: unless-stopped
        delay: 5s
        max_attempts: 3
        window: 120s

  # 可选：添加 Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: yt-dlp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - yt-dlp-web
    networks:
      - yt-dlp-network
    labels:
      - "app.name=yt-dlp-nginx"
      - "app.role=proxy"

networks:
  yt-dlp-network:
    driver: bridge
    labels:
      - "app.network=yt-dlp-production"

# 生产环境数据卷
volumes:
  yt-dlp-downloads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/downloads
    labels:
      - "app.volume=downloads"
      - "backup.enable=true"
      
  yt-dlp-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/database
    labels:
      - "app.volume=database"
      - "backup.enable=true"
      - "backup.priority=high"
      
  yt-dlp-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/logs
    labels:
      - "app.volume=logs"
      
  yt-dlp-temp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/temp
    labels:
      - "app.volume=temp"
      
  yt-dlp-cookies:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/cookies
    labels:
      - "app.volume=cookies"
      - "backup.enable=true"
